server.port=8080
server.servlet.context-path=/
server.tomcat.uri-encoding=UTF-8
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

#MySQL---------------------------
#驱动的全限定类名。默认根据 URL 自动检测。
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#数据库的 JDBC URL
spring.datasource.url=jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#数据库的登录用户名
spring.datasource.username=root
#数据库的登录密码
spring.datasource.password=root
#在连接池启动时要建立的连接数
spring.datasource.initialSize=1
#连接池里始终应该保持的最小连接数(用于DBCP和Tomcat连接池)
spring.datasource.minIdle=1
#连接池中的最大空闲连接数
spring.datasource.maxActive=4
#连接池在等待返回连接时，最长等待多少毫秒再抛出异常
spring.datasource.maxWait=60000
#被弃用的连接在到达弃用超时后是否应该被移除
spring.datasource.tomcat.remove-abandoned=true
#连接在多少秒后应该考虑弃用
spring.datasource.dbcp2.remove-abandoned-timeout=180
#在两次空闲连接验证、弃用连接清理和空闲池大小调整之间睡眠的毫秒数
spring.datasource.timeBetweenEvictionRunsMillis=60000
#一个空闲连接被空闲连接释放器（如果存在的话）优雅地释放前，最短会在连接池里停 留多少时间。
spring.datasource.minEvictableIdleTimeMillis=300000
#在连接池里的连接返回给调用者或连接池时，要执行的验证 SQL 查询
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#在连接空闲时是否要进行测试
spring.datasource.testWhileIdle=true
#从连接池中借用连接时是否要进行测试
spring.datasource.testOnBorrow=false
#在将连接归还到连接池时是否要进行测试
spring.datasource.testOnReturn=false  
#是否要将 Statement 放在池里
spring.datasource.poolPreparedStatements=true
#开启状态的 PreparedStatement 的数量上限
spring.datasource.maxPoolPreparedStatementPerConnectionSize=10
#设置创建连接时使用的属性（用于 DBCP 连接池）
spring.datasource.connectionProperties=config.decrypt=false

#jpa---------------------------
#控制台打印
spring.jpa.show-sql=true
#建表策略，这里用update，即根据实体更新表结构
spring.jpa.hibernate.ddl-auto=update
#方言 添加额外的属性到JPA provider
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.jdbc.use_streams_for_binary=true
spring.jpa.properties.hiberante.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# 是否注册OpenEntityManagerInViewInterceptor，绑定JPA EntityManager到请求线程中，默认为: true
spring.jpa.open-in-view=true

#ehCache
spring.cache.ehcache.config=classpath:ehcache.xml

#freemarker---------------------------
# 是否允许HttpServletRequest属性覆盖(隐藏)控制器生成的同名模型属性。
spring.freemarker.allow-request-override=true
# 是否允许HttpSession属性覆盖(隐藏)控制器生成的同名模型属性。
spring.freemarker.allow-session-override=true
# 是否启用模板缓存。
spring.freemarker.cache=false
# 模板编码。
spring.freemarker.charset=UTF-8
# 是否检查模板位置是否存在。
spring.freemarker.check-template-location=true
# Content-Type value.
spring.freemarker.content-type=text/html
# 是否启用freemarker
spring.freemarker.enabled=true
#设置requestContext变量的名称
spring.freemarker.request-context-attribute=request
# 设定所有request的属性在merge到模板的时候，是否要都添加到model中.
spring.freemarker.expose-request-attributes=false
# 是否在merge模板的时候，将HttpSession属性都添加到model中
spring.freemarker.expose-session-attributes=false
# 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
spring.freemarker.expose-spring-macro-helpers=true
# 是否优先从文件系统加载template，以支持热加载，默认为true,flase以流形式,访问多个templates文件下的模板文件
spring.freemarker.prefer-file-system-access=false
# 设定模板的后缀.
spring.freemarker.suffix=.ftl
#spring.freemarker.view-names=*.ftl
# 设定模板的加载路径，多个以逗号分隔，默认:
spring.freemarker.template-loader-path=classpath:/templates/ftl/
#静态资源路径
# spring.resources.static-locations=classpath:/static,classpath:/plugin,classpath:/plugin/**
# 设定FreeMarker keys.
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.settings.auto_import=/spring.ftl as spring
spring.freemarker.settings.datetime_format=yyyy-MM-dd HH:mm:ss
spring.freemarker.settings.time_format=HH:mm:ss
spring.freemarker.settings.whitespace_stripping=true
spring.freemarker.settings.template_exception_handler=html_debug
spring.freemarker.order=0

#国际化配置
spring.messages.basename=messages/message
#spring.messages.use-code-as-default-message=true
spring.messages.encoding=UTF-8